name: Update Formula

on:
  repository_dispatch:
    types: [formula-update]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to update to (e.g., v1.0.0)'
        required: false
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  update-formula:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get latest release info
        id: release
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            VERSION="${{ github.event.inputs.version }}"
          elif [ -n "${{ github.event.client_payload.version }}" ]; then
            VERSION="${{ github.event.client_payload.version }}"
          else
            # Get the latest release tag
            VERSION=$(curl -s https://api.github.com/repos/fspv/chef-de-vibe/releases/latest | jq -r '.tag_name')
            if [ "$VERSION" = "null" ] || [ -z "$VERSION" ]; then
              # Fallback to latest tag if no releases
              VERSION=$(curl -s https://api.github.com/repos/fspv/chef-de-vibe/tags | jq -r '.[0].name')
            fi
          fi
          
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Updating to version: $VERSION"

      - name: Download and calculate SHA256 checksums
        id: checksums
        run: |
          VERSION="${{ steps.release.outputs.VERSION }}"
          BASE_URL="https://github.com/fspv/chef-de-vibe/releases/download/${VERSION}"
          
          # Download binaries and calculate checksums
          echo "Downloading macOS Intel binary..."
          curl -sL "${BASE_URL}/chef-de-vibe-x86_64-apple-darwin" -o chef-de-vibe-x86_64-apple-darwin
          SHA_MACOS_INTEL=$(sha256sum chef-de-vibe-x86_64-apple-darwin | awk '{print $1}')
          
          echo "Downloading macOS ARM binary..."
          curl -sL "${BASE_URL}/chef-de-vibe-aarch64-apple-darwin" -o chef-de-vibe-aarch64-apple-darwin
          SHA_MACOS_ARM=$(sha256sum chef-de-vibe-aarch64-apple-darwin | awk '{print $1}')
          
          echo "Downloading Linux binary..."
          curl -sL "${BASE_URL}/chef-de-vibe-x86_64-unknown-linux-musl" -o chef-de-vibe-x86_64-unknown-linux-musl
          SHA_LINUX=$(sha256sum chef-de-vibe-x86_64-unknown-linux-musl | awk '{print $1}')
          
          echo "SHA_MACOS_INTEL=$SHA_MACOS_INTEL" >> $GITHUB_OUTPUT
          echo "SHA_MACOS_ARM=$SHA_MACOS_ARM" >> $GITHUB_OUTPUT
          echo "SHA_LINUX=$SHA_LINUX" >> $GITHUB_OUTPUT
          
          # Clean up downloaded files
          rm -f chef-de-vibe-*

      - name: Update Formula
        run: |
          VERSION="${{ steps.release.outputs.VERSION }}"
          SHA_MACOS_INTEL="${{ steps.checksums.outputs.SHA_MACOS_INTEL }}"
          SHA_MACOS_ARM="${{ steps.checksums.outputs.SHA_MACOS_ARM }}"
          SHA_LINUX="${{ steps.checksums.outputs.SHA_LINUX }}"
          
          # Remove 'v' prefix if present for version string
          VERSION_NUMBER="${VERSION#v}"
          
          # Update the formula file using sed
          FORMULA_FILE="Formula/chef-de-vibe.rb"
          
          # Update version
          sed -i "s/version \"[^\"]*\"/version \"$VERSION_NUMBER\"/" "$FORMULA_FILE"
          
          # Update URLs - replace version tags in download URLs
          sed -i "s|releases/download/v[^/]*/chef-de-vibe|releases/download/$VERSION/chef-de-vibe|g" "$FORMULA_FILE"
          
          # Update SHA256 for macOS Intel (x86_64-apple-darwin)
          # Find the line with x86_64-apple-darwin URL and update the sha256 on the next line
          sed -i "/x86_64-apple-darwin\"$/,/sha256/ s/sha256 \"[^\"]*\"/sha256 \"$SHA_MACOS_INTEL\"/" "$FORMULA_FILE"
          
          # Update SHA256 for macOS ARM (aarch64-apple-darwin)
          # Find the line with aarch64-apple-darwin URL and update the sha256 on the next line
          sed -i "/aarch64-apple-darwin\"$/,/sha256/ s/sha256 \"[^\"]*\"/sha256 \"$SHA_MACOS_ARM\"/" "$FORMULA_FILE"
          
          # Update SHA256 for Linux musl (x86_64-unknown-linux-musl)
          # Find the line with x86_64-unknown-linux-musl URL and update the sha256 on the next line
          sed -i "/x86_64-unknown-linux-musl\"$/,/sha256/ s/sha256 \"[^\"]*\"/sha256 \"$SHA_LINUX\"/" "$FORMULA_FILE"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: "Update chef-de-vibe to ${{ steps.release.outputs.VERSION }}"
          title: "Update chef-de-vibe to ${{ steps.release.outputs.VERSION }}"
          body: |
            This PR updates the chef-de-vibe formula to version ${{ steps.release.outputs.VERSION }}.
            
            ### Changes
            - Updated version to ${{ steps.release.outputs.VERSION }}
            - Updated SHA256 checksums for all platforms
            
            ### Checksums
            - macOS Intel: ${{ steps.checksums.outputs.SHA_MACOS_INTEL }}
            - macOS ARM: ${{ steps.checksums.outputs.SHA_MACOS_ARM }}
            - Linux: ${{ steps.checksums.outputs.SHA_LINUX }}
            
            ---
            *This pull request was automatically generated by GitHub Actions.*
          branch: update-chef-de-vibe-${{ steps.release.outputs.VERSION }}
          delete-branch: true
          base: master